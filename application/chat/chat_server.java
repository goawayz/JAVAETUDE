/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package chat;

import java.util.HashMap; // import the HashMap class
import java.util.ArrayList; // import the ArrayList class
import chat.Client; // Import a single class "Client"
import java.io.BufferedReader;// Import a single class"BufferedReader"
import java.io.DataInputStream;// Import a single class "DataInputStream"
import java.io.DataOutputStream;// Import a single class"dataoutputstream"
import java.io.IOException;// Import a single class"ioexception"
import java.io.InputStream;// Import a single class"inputstrem"
import java.io.InputStreamReader;// Import a single class"streamReader"
import java.net.DatagramPacket;// Import a single class"DatagramPacket"
import java.net.DatagramSocket;// Import a single class"DATAGRAMsocket"
import java.net.InetAddress;// Import a single class"InetAdress"
import java.net.MulticastSocket;// Import a single class"MulticastingSocket"
import java.net.Socket;// Import a single class"Socket"
import java.util.Date;// Import a single class"Date"
import java.util.Scanner;// Import a single class"Scanner"
import java.util.logging.Level;// Import a single class"Logging.Level"
import java.util.logging.Logger;// Import a single class"Logging.loger"
import javax.swing.Box;// Import a single class"Box"
import javax.swing.JLabel;// Import a single class"JLabel"
import javax.swing.JOptionPane;// Import a single class"JOptionPane"
import javax.swing.JPanel;// Import a single class"JPanel"
import javax.swing.JPasswordField;// Import a single class"JPasswordField"
import javax.swing.JTextField;// Import a single class "JTextField"

/**
 *
 * @author Administrator
 */
public class chat_server extends javax.swing.JFrame  //The chat_server class (subclass) inherits the attributes and methods from the javax.swing.JFrame class (superclass)
{
    //creation des atributs:
    static DataInputStream dis;
    static DataOutputStream dout;
    static DatagramSocket socket;
    static boolean running;
    static byte[] buf = new byte[256];
    static InetAddress group;
    static MulticastSocket s;
    static String name;
    static boolean toggle = true;

    /**
     * Creates new form chat_server
     */
    //Constructor avec parametre:
    public chat_server(String myName) {
        initComponents();
        name = myName;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();//insertion 
        msg_area = new javax.swing.JTextArea();
        msg_text = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        msg_send = new javax.swing.JButton();
        disconnect = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        msg_area.setColumns(20);
        msg_area.setRows(5);
        jScrollPane1.setViewportView(msg_area);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("CLIENT");

        msg_send.setText("send");
        msg_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_sendActionPerformed(evt);
            }
        });

        disconnect.setText("Disconnect");
        disconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconnectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(disconnect)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(msg_text, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(msg_send, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(disconnect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(msg_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(msg_send))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //method de send event_msg_sendActionPerformed
    private void msg_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msg_sendActionPerformed
        if (toggle == true) {
            toggle = false;
            String msg = name + " join the group  |  " + new Date(); // Display the current date
            DatagramPacket hi = new DatagramPacket(msg.getBytes(), msg.length(),//Sending DatagramPacket by DatagramSocket
                    group, 6789);
            try {
                s.send(hi);
            } catch (IOException ex) {
                Logger.getLogger(chat_server.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        String msg = name + " : " + msg_text.getText() + "  |  " + new Date();
        DatagramPacket hi = new DatagramPacket(msg.getBytes(), msg.length(),
                group, 6789);
        try {
            s.send(hi);
            msg_text.setText("");
        } catch (IOException ex) {
            Logger.getLogger(chat_server.class.getName()).log(Level.SEVERE, null, ex);
        }
        // get their responses!


    }
    //method de disconnect event_disconnectActionPerformed

    private void disconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disconnectActionPerformed

        int dialogResult = JOptionPane.showConfirmDialog(null, "Would You Like to Save your Previous Note First?");
        if (dialogResult == JOptionPane.YES_OPTION) {
            String msg = name + " **********Disconnected ********** |  " + new Date();
            DatagramPacket hi = new DatagramPacket(msg.getBytes(), msg.length(),
                    group, 6789);
            try {
                s.send(hi);
                msg_text.setText("");
            } catch (IOException ex) {
                Logger.getLogger(chat_server.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.exit(0);
        }

        //

    }
    /**
     * @param args the command line arguments
     */
    //la class main princapl pour execution de notre chat:
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(chat_server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(chat_server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(chat_server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(chat_server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        JTextField xField = new JTextField(5);
        JPasswordField yField = new JPasswordField(5);

        JPanel myPanel = new JPanel();
        myPanel.add(new JLabel("User:"));
        myPanel.add(xField);
        myPanel.add(Box.createHorizontalStrut(15)); // a spacer
        myPanel.add(new JLabel("Password:"));
        myPanel.add(yField);

        int result = JOptionPane.showConfirmDialog(null, myPanel,
                "Login", JOptionPane.OK_CANCEL_OPTION);

        ArrayList<Client> Ss = new ArrayList<Client>();

        Ss.add(new Client("DJAMEL", "djamel", "djamel123"));//add djamel to Client liste
        Ss.add(new Client("AHMED", "ahmed", "ahmed123"));//add ahmed to the Client liste
        Ss.add(new Client("FAHSI", "fahsi", "fahsi@12"));//...
        Ss.add(new Client("MARK", "mark", "mark@@"));//.....


        boolean no_user = true;

        if (result == JOptionPane.OK_OPTION) {

            for (Client c : Ss) {

                if (xField.getText().equals(c.getUser_name()) && yField.getText().equals(c.getUser_pass())) {
                    no_user = false;
                    java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                            String name = c.getName();

                            new chat_server(name).setVisible(true);
                            jLabel1.setText(name);
                            msg_area.setEditable(false);

                        }
                    });

                    try {
                        group = InetAddress.getByName("228.5.6.7");
                        s = new MulticastSocket(6789);
                        s.joinGroup(group);
                        while (true) {
                            byte[] buf = new byte[1000];
                            DatagramPacket recv = new DatagramPacket(buf, buf.length);
                            try {
                                s.receive(recv);
                                buf = recv.getData();
                                msg_area.setText(msg_area.getText() + "\n" + new String(buf, 0, recv.getLength()));
                            } catch (IOException ex) {
                                Logger.getLogger(chat_server.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "ERROR Connecion Server", "Connexion error", JOptionPane.ERROR_MESSAGE);

                    }
                }

                if (no_user = false) {
                    break;
                }
            }
           
                JOptionPane.showMessageDialog(null, "User or password incorrect", "User or password incorrect error", JOptionPane.ERROR_MESSAGE);
            

        }
        /* Create and display the form */

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton disconnect;
    private static javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextArea msg_area;
    private javax.swing.JButton msg_send;
    private javax.swing.JTextField msg_text;
    // End of variables declaration//GEN-END:variables

// creat method To change body of generated methods, choose Tools | Templates.
    private DataOutputStream writeUTF(String msg) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
}
